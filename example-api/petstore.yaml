openapi: "3.0.0"
info:
  version: 1.0.0
  title: Petstore
  license:
    name: MIT
servers:
  - url: http://localhost:8000
paths:
  /pets:
    get:
      summary: List all pets
      operationId: getAllPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: true
          schema:
            type: integer
            format: int32
        - name: filter
          in: query
          description: regex by which to filter pet names
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A paged array of pets
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
        '400':
          description: Invalid filter regex
    post:
      summary: Create a pet
      operationId: createPet
      tags:
        - pets
      requestBody:
        description: Pet to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPet'
      responses:
        '201':
          description: pet created
        '403':
          description: some forbidden
        '409':
          description: some conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SomeConflict"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: getPet
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: Pet retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        '404':
          description: Pet not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Pet:
      description: A cat or a dog or a mouse or a rabbit
      required:
        - id
        - name
      properties:
        id:
          description: Unique identifier
          type: integer
          format: int64
        name:
          description: Name of pet
          type: string
        tag:
          type: string
    NewPet:
      description: A new pet! Fluffy and and cute
      required:
        - name
      properties:
        name:
          description: Name of pet
          type: string
        tag:
          type: string
    Pets:
      description: Many pets!
      type: array
      items:
        $ref: "#/components/schemas/Pet"
    Error:
      description: Bad, wrong, make feel sad
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    SomeConflict:
      description: We need some conflict resolution
      required:
        - message
      properties:
        message:
          type: string
